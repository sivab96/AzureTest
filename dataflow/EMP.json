{
	"name": "EMP",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Products",
						"type": "DatasetReference"
					},
					"name": "EMP"
				},
				{
					"dataset": {
						"referenceName": "Products",
						"type": "DatasetReference"
					},
					"name": "DEPT"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Products",
						"type": "DatasetReference"
					},
					"name": "EMP10"
				},
				{
					"dataset": {
						"referenceName": "Products",
						"type": "DatasetReference"
					},
					"name": "EMP11"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tEMPNO as decimal(4,0),\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as decimal(4,0),\n\t\tHIREDATE as timestamp,\n\t\tSAL as decimal(7,2),\n\t\tCOMM as decimal(7,2),\n\t\tDEPTNO as decimal(2,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> EMP\nsource(output(\n\t\tDEPTNO as decimal(2,0),\n\t\tDNAME as string,\n\t\tLOC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DEPT\nEMP, DEPT join(EMP@DEPTNO == DEPT@DEPTNO,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSelect1 split(SAL>1500,\n\tdisjoint: false) ~> ConditionalSplit1@(EMP10, EMP11)\nJoin1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nConditionalSplit1@EMP10 sink(input(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> EMP10\nConditionalSplit1@EMP11 sink(input(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> EMP11"
		}
	}
}